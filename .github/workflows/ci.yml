name: Build, Test and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    # HEADコミットが'skip ci'を含んでいれば、ciをキャンセルする。
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    runs-on: ubuntu-latest
    timeout-minutes: 30

    # environmentを設定する！
    environment: production
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Restore cache for Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Android Lint
        run: ./gradlew lintDebug

  local-test:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Run Local Unit Test
        run: ./gradlew testDebug

      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Local-Test-Reports
          path: app/build/reports/tests/*
        if: always()

  android-emulator-test:
    runs-on: macos-latest
    needs: build
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        api-level: [ 26, 29, 30 ]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      # JDKのセットアップ
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Restore cache for Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # api-levelによってエミュレータのターゲットを変える。
      # https://docs.github.com/ja/actions/learn-github-actions/workflow-commands-for-github-actions#example
      - name: Set the emulator target name to GITHUB_ENV 
        id: setup_target_name
        run: |
          # target="default"
          target="google_apis"
          if [ "${{ matrix.api-level }}" -ge "29" ]; then
            target="google_apis"
          fi
          echo "env_target=$target" >> $GITHUB_ENV
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ env.env_target }}
          arch: x86
          profile: Galaxy Nexus
          script: ./gradlew connectedCheck --stacktrace

      # テスト結果をアップロードする。
      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Android-Test-Reports-API${{ matrix.api-level }}
          path: app/build/reports
        if: always()

  deploy:
    runs-on: ubuntu-latest
    needs: [ build, local-test, android-emulator-test ]
    timeout-minutes: 10

    environment: production
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      # release.keystoreをデコードする。
      - name: Decode Keystore
        run: echo ${{ secrets.ENCODED_RELEASE_KEYSTORE }} | base64 --decode > ./app/release.keystore

      # aab形式でビルドする。
      - name: Build AAB
        run: ./gradlew :app:bundleRelease
        env:
          RELEASE_KEYSTORE_STORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_STORE_PASSWORD }}
          RELEASE_KEYSTORE_KEY_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_KEY_PASSWORD }}

      - name: Upload aab file
        uses: actions/upload-artifact@v2
        with:
          name: aab
          path: app/build/outputs/bundle/release/app-release.aab
          if-no-files-found: error
          retention-days: 3

  license-checker:
    runs-on: ubuntu-20.04
    needs: [ build, local-test, android-emulator-test ]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # 0 means all branches

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Run Android Build
        run: ./gradlew assembleDebug

      - name: Build
        run: |
          metadata_path='app/build/generated/third_party_licenses/res/raw/third_party_license_metadata'
          data_path='app/build/generated/third_party_licenses/res/raw/third_party_licenses'
          mkdir ./public
          mv "${metadata_path}" ./public
          mv "${data_path}" ./public
      - name: Checkout to ph-pages to compare previous version
        run: |
          git checkout origin/gh-pages
      - name: Check diff metadata
        id: diff-metadata
        run: |
          metadata_path='third_party_license_metadata'
          data_path='third_party_licenses'

          meta_file="./third_party_license_metadata"
          if [ ! -e "$meta_file" ]; then
            touch "$meta_file"
          fi
          echo "===== diff start ====="
          set +e
          # FIXME: 2回同じ計算してる
          diff_meta=`diff ${meta_file} "./public/${metadata_path}"`
          diff ${meta_file} "./public/${metadata_path}" > ./public/diff_metadata
          set -e

          # Preserve results
          echo "::set-output name=diff::$(echo $diff_meta)"
        shell: bash
      - name: Check diff licenses
        id: diff-license
        run: |
          data_path='third_party_licenses'

          license_file="./third_party_license"
          if [ ! -e "$license_file" ]; then
            touch "$license_file"
          fi
          set +e
          # FIXME: 2回同じ計算してる
          diff_license=`diff ${license_file} "./public/${data_path}"`
          diff ${license_file} "./public/${data_path}" > ./public/diff_license
          set -e

          # Preserve results
          echo "::set-output name=diff::$(echo $diff_license)"
        shell: bash
      - name: Check Diff
        continue-on-error: true
        run: |        
          if [ -n "${{ steps.diff-metadata.outputs.diff }}" ]; then
            echo "diff found!!"
            echo "env_is_diff=true" >> $GITHUB_ENV
          else
            echo "diff nooooot found!!"
            echo "env_is_diff=false" >> $GITHUB_ENV
          fi

          echo "id_diff check"
          echo ${{ env.env_is_diff }}

          git checkout ${{ github.repository }}

      - name: Cache for later upload
        uses: actions/cache@v2
        with:
          path: |
            ./public
          key: ${{ runner.os }}-public-${{ hashFiles('./public/*') }}
          restore-keys: |
            ${{ runner.os }}-public-

  license-upload:
    runs-on: ubuntu-20.04
    needs: [ license-checker ]
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Restore cache for upload results
        uses: actions/cache@v2
        with:
          path: |
            ./public
          key: ${{ runner.os }}-public-${{ hashFiles('./public/*') }}
          restore-keys: |
            ${{ runner.os }}-public-
      # Update gh-pages if diff found
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        # メインブランチへの更新かつ、差分がある場合
        if: ${{ (github.ref == 'refs/heads/main') && (env.env_is_diff == 'true') }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      # FIXME: 以下の２つはうまく output を分岐させて、１つの step で書きたい
      - name: Outputs when diff found
        uses: actions/github-script@v5
        # PR かつ、差分がある場合
        if: ${{ (github.event_name == 'pull_request') && (env.env_is_diff == 'true') }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### CI/CD Results
            Hello, I'm kokoichi 👋

            License diff found in your commit!
            Please check if there's no problem.
            <details><summary>Diff metadata</summary>
            \`\`\`\n
            ${{ steps.diff-metadata.outputs.diff }}
            \`\`\
            </details>

            <details><summary>Diff Licenses</summary>
            \`\`\`\n
            ${{ steps.diff-license.outputs.diff }}
            \`\`\
            </details>
            
            see more https://github.com/kokoichi206/count-down-timer/tree/gh-pages
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Outputs when NO diff found
        uses: actions/github-script@v5
        # PR かつ、差分がない場合
        if: ${{ (github.event_name == 'pull_request') && (env.env_is_diff == 'false') }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### CI/CD Results
            Hello, I'm kokoichi 👋
            No License Diff Found

            see current license [here](https://github.com/kokoichi206/count-down-timer/tree/gh-pages)`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      # artifact にも保存しておく
      - name: Upload license related files
        uses: actions/upload-artifact@v2
        with:
          name: license
          path: ./public
          if-no-files-found: error
          retention-days: 3
